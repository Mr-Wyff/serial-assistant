<Window x:Class="serial_assistant.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:serial_assistant"
        mc:Ignorable="d" FontSize="16" 
        
        Title="串口调试助手-小飞哥玩嵌入式" Height="600" Width="900" WindowStyle="ThreeDBorderWindow"
      
        FontStyle="Italic"
        >
    <Window.Resources>
        <SolidColorBrush x:Key="Brush1" Color="Red"/>

        <!--Combox右侧下拉按钮-->
        <Style TargetType="ToggleButton" x:Key="ComboxStyleBtn">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <!--下拉按钮内部背景色-->
                        <Border x:Name="Back" Background="White" BorderThickness="1" BorderBrush="Transparent">
                            <!--下拉按钮内边框-->
                            <Path Name="PathFill" Fill="Red"  Width="10" Height="6" StrokeThickness="0" Data="M5,0 L10,10 L0,10 z" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="PathFill" Property="Fill" Value="White"></Setter>
                                <Setter TargetName="Back" Property="Background" Value="#00CA4F"></Setter>
                                <Setter TargetName="Back" Property="BorderBrush" Value="#59CA4F"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Combox-->
        <Style TargetType="ComboBox" x:Key="ComboBoxStyle">
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <!--ComBoxItem-->
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="MinHeight" Value="22"></Setter>
                        <Setter Property="MinWidth" Value="60"></Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border Name="Back" Background="Transparent"  BorderThickness="0,0,0,0" BorderBrush="Red" >
                                        <ContentPresenter ContentSource="{Binding Source}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" ></ContentPresenter>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Back" Property="Background" Value="LightGray"></Setter>
                                        </Trigger>
                                        <!--下拉框背景色-->
                                        <Trigger Property="IsHighlighted" Value="True">
                                            <Setter TargetName="Back" Property="Background" Value="#ff0000"></Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.7*"/>
                                <ColumnDefinition Width="0.3*" MaxWidth="30"/>
                            </Grid.ColumnDefinitions>
                            <!--文字区域背景和边线样式-->
                            <TextBox Background="White" VerticalAlignment="Center"  Grid.Column="0" Foreground="Black" BorderBrush="Red" BorderThickness="0" IsReadOnly="{TemplateBinding IsReadOnly}" Text="{TemplateBinding Text}"></TextBox>
                            <Border  Grid.Column="0" BorderThickness="0 0 0 1" BorderBrush="Red" CornerRadius="1,0,0,1">

                            </Border>
                            <!--右侧下拉button设置-->
                            <Border Grid.Column="1" BorderThickness="0,0,0,1" BorderBrush="Red" CornerRadius="0,1,1,0">
                                <ToggleButton BorderThickness="3" BorderBrush="Red" Style="{StaticResource ComboxStyleBtn}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"></ToggleButton>
                            </Border>
                            <!--弹出popup整体设置-->
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide" >
                                <!--弹出popup边框-->
                                <Border CornerRadius="1" BorderBrush="#03ffea" BorderThickness="1,0,1,1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="1"/>
                                    </Border.Effect>
                                    <!--下拉幕布边界背景设置 MaxHeight="{TemplateBinding MaxDropDownHeight}"-->
                                    <ScrollViewer Margin="0,0,0,0"   SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" BorderBrush="#17acae" BorderThickness="2" >
                                        <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--按键样式-->
            <Style x:Key="buttonstyle" TargetType="Button">
            <Style.Setters>
                <Setter Property="Background" Value="White"></Setter>
                <Setter Property="Foreground" Value="Blue"></Setter>
                <Setter Property="BorderBrush" Value="Transparent"></Setter>
            </Style.Setters>
        </Style>

        <!--GroupBox样式-->
        <Style x:Key="GroupBoxStyle" TargetType="GroupBox">
            <Style.Setters>
                <Setter Property="Background" Value="White"></Setter>
                <Setter Property="BorderBrush" Value="Red"></Setter>
                <Setter Property="BorderThickness" Value="1"></Setter>
            </Style.Setters>
        </Style>
    </Window.Resources>


    <Grid >


        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
        </Grid.RowDefinitions>


        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"></ColumnDefinition>
            <ColumnDefinition Width="auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <GroupBox Style="{StaticResource GroupBoxStyle}" Background="White" Grid.Column="0" Header="串口设置" >
            <StackPanel Margin="10">
                <StackPanel Margin="0 5" Orientation="Horizontal">
                    <Label Content="串口号" Margin="0 0 10 0"></Label>
                    <ComboBox Name="cbPort" Style="{StaticResource  ComboBoxStyle}"  Width="90"></ComboBox>
                </StackPanel>

                <StackPanel  Margin="0 5" Orientation="Horizontal">
                    <Label Content="波特率"  Margin="0 0 10 0"></Label>
                    <ComboBox Background="White"  Style="{StaticResource  ComboBoxStyle}" Name="cbBaudRate" Width="90">
                        <ComboBoxItem Content="1200"></ComboBoxItem>
                        <ComboBoxItem Content="4800"></ComboBoxItem>
                        <ComboBoxItem Content="9600" IsSelected="True"></ComboBoxItem>
                        <ComboBoxItem Content="19200"></ComboBoxItem>
                        <ComboBoxItem Content="38400"></ComboBoxItem>
                        <ComboBoxItem Content="115200"></ComboBoxItem>
                    </ComboBox>
                </StackPanel>

                <StackPanel Margin="0 5" Orientation="Horizontal">
                    <Label Content="数据位" Margin="0 0 10 0"></Label>
                    <ComboBox Name="cbDataBits"  Style="{StaticResource  ComboBoxStyle}" Width="90">
                        <ComboBoxItem Content="5"></ComboBoxItem>
                        <ComboBoxItem Content="6"></ComboBoxItem>
                        <ComboBoxItem Content="7"></ComboBoxItem>
                        <ComboBoxItem Content="8" IsSelected="True"></ComboBoxItem>
                    </ComboBox>
                </StackPanel>


                <StackPanel Margin="0 5" Orientation="Horizontal">
                    <Label Content="校验位" Margin="0 0 10 0"></Label>
                    <ComboBox Name="cbParity"  Style="{StaticResource  ComboBoxStyle}" Width="90">
                        <ComboBoxItem Content="None" IsSelected="True"></ComboBoxItem>
                        <ComboBoxItem Content="Even"></ComboBoxItem>
                        <ComboBoxItem Content="Odd"></ComboBoxItem>
                    </ComboBox>
                </StackPanel>

                <StackPanel Margin="0 5" Orientation="Horizontal">
                    <Label Content="停止位" Margin="0 0 10 0"></Label>
                    <ComboBox Name="cbStopBits"  Style="{StaticResource  ComboBoxStyle}" Width="90">
                        <ComboBoxItem Content="One" IsSelected="True" />
                        <ComboBoxItem Content="Two" />
                        <ComboBoxItem Content="None" />
                    </ComboBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="20 5">
                    <Button x:Name="BtnOpenSerialPort" Background="Transparent" Content="Connect" Margin="46 0 10 0" Width="90" Height="30" Click="BtnOpenSerialPort_Click"/>
                </StackPanel>
            </StackPanel>
        </GroupBox>

        <GroupBox Style="{StaticResource GroupBoxStyle}" Background="White" Height="auto" Width="auto" Grid.Row="1" Header="接收设置" Margin="0,0,0,0" >
            <StackPanel>

                <StackPanel Margin="0 5" Orientation="Horizontal">
                    <RadioButton x:Name="rx_ascii_type" Content="ASCII" IsChecked="True" Margin="10 0 10 10" HorizontalAlignment="Center"  ></RadioButton>
                    <RadioButton x:Name="rx_hex_type" Content="HEX" Margin="10 0 10 10"></RadioButton>
                </StackPanel>

                <StackPanel  Margin="0 5" Orientation="Horizontal">
                    <CheckBox  x:Name="AutoChangeLine" Content="自动换行"  Margin="10 0 10 10"></CheckBox>
                </StackPanel>

                <StackPanel>
                    <CheckBox  x:Name="DispSend" Content="显示发送"  Margin="10 0 10 10"></CheckBox>
                </StackPanel>

                <StackPanel>
                    <CheckBox  x:Name="DispTime" Content="显示时间"  Margin="10 0 10 10"></CheckBox>
                </StackPanel>

            </StackPanel>
        </GroupBox>

        <GroupBox Style="{StaticResource GroupBoxStyle}" Background="White" Height="auto" Width="auto" Grid.Row="2" Header="发送设置" Margin="0"  >
            <StackPanel>
                <StackPanel Margin="0 5" Orientation="Horizontal">
                    <RadioButton x:Name="tx_ascii_type" Content="ASCII" IsChecked="True" Margin="10 0 10 10" HorizontalAlignment="Center"  ></RadioButton>
                    <RadioButton x:Name="tx_hex_type" Content="HEX" Margin="10 0 10 10"></RadioButton>
                </StackPanel>

                <StackPanel  Margin="0 5" Orientation="Horizontal">
                    <CheckBox  x:Name="AutoTransmit" Content="自动发送"  Margin="10 0 10 10"></CheckBox>
                    <TextBox x:Name="AutoTransmit_Time" Text="3000" Height="auto" Width="auto" ></TextBox>
                    <Label Content="ms"></Label>
                </StackPanel>
            </StackPanel>
        </GroupBox>
        <TextBox x:Name="txtReceive" Grid.ColumnSpan="2" HorizontalAlignment="Left" Height="360" Margin="218,0,-632.8,79.6" Grid.RowSpan="2" TextWrapping="Wrap" VerticalAlignment="Bottom" Width="650" />
        <TextBox x:Name="txtSend" Grid.Column="1" HorizontalAlignment="Left" Height="172" Margin="1.6,87.8,-627.2,0" Grid.Row="1" TextWrapping="Wrap" VerticalAlignment="Top" Width="648" Grid.RowSpan="2"/>
        <Button x:Name="BtnClear" Foreground="White" Background="Red" Content="清空" Grid.Column="1" HorizontalAlignment="Left" Margin="442.6,65.4,-498.4,0" Grid.Row="2" VerticalAlignment="Top" Width="75" Click="BtnClearTx_Click"/>
        <Button Name="BtnSend" Content="发送"  Grid.Column="1" Foreground="White" Background="Red" HorizontalAlignment="Left" Margin="553.6,65.4,-607,0" Grid.Row="2" VerticalAlignment="Top" Width="75" Click="BtnSend_Click" />

    </Grid>
</Window>
